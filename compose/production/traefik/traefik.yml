log:
  level: INFO

certificatesResolvers:
  myresolver:
    acme:
      email: meet.daxini@gwu.edu
      storage: /etc/traefik/acme.json
      httpChallenge:
        # Using HTTP Challenge
        entryPoint: web

entryPoints:
  web:
    address: ':80'
    # http:
    #   middlewares:
    #     - redirect-to-https
    http:
      redirections:
        entryPoint:
          to: websecure

  websecure:
      address: ":443"
  flower:
    address: ':5555'

http:
  routers:
    web-router:
      # rule: 'HostRegexp(`{host:.+}`)'
      # rule: 'Host(`newsbuzzworthy.com`) || Host(`www.newsbuzzworthy.com`)'
      rule: 'Host(`newsbuzzworthy.com`)'
      entryPoints:
        - web
      middlewares:
        - csrf
      service: django
    websecure-router:
      # rule: 'Host(`newsbuzzworthy.com`) || Host(`www.newsbuzzworthy.com`)'
      rule: 'Host(`newsbuzzworthy.com`)'
      entryPoints:
        - websecure
      middlewares:
        - csrf
      service: django
      tls:
        certResolver: myresolver

    flower-router:
      rule: 'PathPrefix(`/flower`) && Host(`newsbuzzworthy.com`)'
      entryPoints:
        - websecure
      service: flower
      middlewares:
        - strip-flower-prefix

  middlewares:
    # redirect-to-https:
    #   redirectScheme:
    #     scheme: https
    #     permanent: true
    csrf:
      headers:
        hostsProxyHeaders: ['X-CSRFToken']
    strip-flower-prefix:
      stripPrefix:
        prefixes:
          - "/flower"
  services:
    django:
      loadBalancer:
        servers:
          - url: http://django:5000

    flower:
      loadBalancer:
        servers:
          - url: http://flower:5555

providers:
  file:
    filename: /etc/traefik/traefik.yml
    watch: true

